name: Build Base Image - Alpine
on: pull_request
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  app-build: 
    permissions: 
      contents: read
      packages: write 
    runs-on: ubuntu-latest 
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
    - name: remove properties template
      run: rm $GITHUB_WORKSPACE/src/main/resources/application_example.properties 
    - name: rename config file 
      run: cp $GITHUB_WORKSPACE/src/main/resources/application.properties.j2 $GITHUB_WORKSPACE/src/main/resources/application.properties 
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: maven
    - name: Build with Maven
      run: mvn package -DskipTests
    - name: Rename Artifact 
      run: cp $GITHUB_WORKSPACE/target/Bento-0.0.1.war $GITHUB_WORKSPACE/target/ROOT.war
    - uses: actions/upload-artifact@v3
      with:
        name: maven-build
        path: ./target/ROOT.war
  image-build:
    needs: app-build
    runs-on: ubuntu-latest
    permissions:
      contents: read 
      packages: write
      actions: read
      security-events: write
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Dowload Artifact 
      uses: actions/download-artifact@v3
      with:
        name: maven-build
        path: target

    - name: Docker Login
      id: login
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract Metadata
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    - name: Build and Publish
      id: run
      uses: docker/build-push-action@v3
      with:
        file: ./dockerfiles/cbiit-alpine-base-dockerfile
        build-args: ARTIFACT=target/ROOT.war
        push: false 
        no-cache: true 
        load: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Scan image
      id: scan
      uses: anchore/scan-action@v3
      with: 
        image: ${{ steps.meta.outputs.tags }}
        fail-build: false 
        severity-cutoff: low
        output-format: table
    
    - name: SBOM 
      uses: anchore/sbom-action@v0
      with:
        image: ${{ steps.meta.outputs.tags }}

    - name: Run Trivy
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ steps.meta.outputs.tags }}
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'

    - name: Run HadoLint 
      uses: hadolint/hadolint-action@v2.1.0
      with:
        dockerfile: ./dockerfiles/cbiit-alpine-base-dockerfile
        no-fail: true

    - name: Run Snyk to check Docker image for vulnerabilities
      uses: snyk/actions/docker@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        image: ${{ steps.meta.outputs.tags }}